<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zjzmjr.core.service.mapper.JobMenuMapper" >
  <resultMap id="BaseResultMap" type="JobMenu" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="company_id" property="companyId" jdbcType="INTEGER" />
    <result column="job_id" property="jobId" jdbcType="INTEGER" />
    <result column="menu_id" property="menuId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="version" property="version" jdbcType="INTEGER" />
    <result column="create_user_id" property="createUserId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, company_id, job_id, menu_id, create_time, version, create_user_id
  </sql>

  <select id="getJobMenuByJobId" resultMap="com.zjzmjr.core.service.mapper.dao.coredb.menu.AdminMenuDao.adminMenuResultMap" parameterType="java.lang.Integer" >
    SELECT menu.* FROM z_job_menu um INNER JOIN t_menu menu ON
    um.menu_id=menu.id
    WHERE
    um.job_id = #{jobId,jdbcType=INTEGER}
    ORDER BY menu.parent,menu.disporder ASC
  </select>
  <select id="getJobMenuCount" resultType="java.lang.Integer" parameterType="JobMenuQuery">
    select count(id)
    from z_job_menu
    <include refid="where_clause"></include>
  </select>
  <select id="getJobMenuByCondition" parameterType="JobMenuQuery" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from z_job_menu
    <include refid="where_clause"></include>
    <choose>
        <when test="orderBy != null and orderBy!=''">
            order by #{orderBy}
        </when>
        <otherwise>
            order by id DESC
        </otherwise>
    </choose>
    limit #{pageBean.offset},#{pageBean.pageSize}
  </select>
  <sql id="where_clause">
    <where>
        <trim prefixOverrides="and">
            <if test="jobId != null">
                and job_id = #{jobId,jdbcType=INTEGER}
            </if>
            <if test="menuId != null">
                and menu_id = #{menuId,jdbcType=INTEGER}
            </if>
        </trim>
    </where>
  </sql>
  
    <delete id="deleteJobMenuByMenuIds" parameterType="map">
        DELETE FROM z_job_menu WHERE job_id=#{jobId} AND menu_id IN
            <foreach collection="menuIds" open="(" close=")" separator="," item="item">
                #{item}
            </foreach>
    </delete>
    
    <insert id="batchInsertJobMenu" parameterType="list">
        INSERT INTO z_job_menu (company_id,job_id,menu_id,create_time,create_user_id) VALUES
        <foreach collection="list" open="" close="" separator="," item="item">
            (#{item.companyId},#{item.jobId},#{item.menuId},#{item.createTime},#{item.createUserId})
        </foreach>
    </insert>
     
  <insert id="insertJobMenu" parameterType="JobMenu" >
    insert into z_job_menu
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="companyId != null" >
        company_id,
      </if>
      <if test="jobId != null" >
        job_id,
      </if>
      <if test="menuId != null" >
        menu_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="version != null" >
        version,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="companyId != null" >
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="jobId != null" >
        #{jobId,jdbcType=INTEGER},
      </if>
      <if test="menuId != null" >
        #{menuId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null" >
        #{version,jdbcType=INTEGER},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateJobMenuById" parameterType="JobMenu" >
    update z_job_menu
    <set >
      <if test="companyId != null" >
        company_id = #{companyId,jdbcType=INTEGER},
      </if>
      <if test="jobId != null" >
        job_id = #{jobId,jdbcType=INTEGER},
      </if>
      <if test="menuId != null" >
        menu_id = #{menuId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null" >
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

</mapper>