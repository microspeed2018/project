<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zjzmjr.core.service.mapper.dao.project.SubpackagePaymentMapper" >
  <resultMap id="BaseResultMap" type="SubpackagePayment" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="company_id" property="companyId" jdbcType="INTEGER" />
    <result column="subpackage_id" property="subpackageId" jdbcType="INTEGER" />
    <result column="payment_mode" property="paymentMode" jdbcType="INTEGER" />
    <result column="payment_amount" property="paymentAmount" jdbcType="DECIMAL" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_user_id" property="createUserId" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="update_user_id" property="updateUserId" jdbcType="INTEGER" />
    <result column="version" property="version" jdbcType="INTEGER" />
  </resultMap>
  <resultMap type="SubpackagePaymentInfo" id="SubpackagePaymentInfoResultMap" extends="BaseResultMap">
    <association property="subpackage" column="subpackage_id" javaType="ContractSubpackage" fetchType="lazy">
        <id column="id" property="id" jdbcType="INTEGER" />
	    <result column="company_id" property="companyId" jdbcType="INTEGER" />
	    <result column="project_id" property="projectId" jdbcType="INTEGER" />
	    <result column="subpackage_leader" property="subpackageLeader" jdbcType="INTEGER" />
	    <result column="subpackage_capital" property="subpackageCapital" jdbcType="DECIMAL" />
	    <result column="subpackage_content" property="subpackageContent" jdbcType="VARCHAR" />
	    <result column="payment_memo" property="paymentMemo" jdbcType="VARCHAR" />
	    <result column="subpackage_memo" property="subpackageMemo" jdbcType="VARCHAR" />
	    <result column="status" property="status" jdbcType="INTEGER" />
    </association>
    <association property="project" column="project_id" javaType="GardenProject" fetchType="lazy">
        <id column="garden_project_id" property="id" jdbcType="INTEGER" />
        <result column="project_no" property="projectNo" jdbcType="VARCHAR" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="city" property="city" jdbcType="INTEGER" />
        <result column="address" property="address" jdbcType="VARCHAR" />
        <result column="nature" property="nature" jdbcType="INTEGER" />
        <result column="design_area" property="designArea" jdbcType="INTEGER" />
        <result column="investment_mount" property="investmentMount" jdbcType="DECIMAL" />
        <result column="category" property="category" jdbcType="INTEGER" />
        <result column="type" property="type" jdbcType="INTEGER" />
        <result column="have_scheme" property="haveScheme" jdbcType="INTEGER" />
        <result column="have_development" property="haveDevelopment" jdbcType="INTEGER" />
        <result column="have_drawing" property="haveDrawing" jdbcType="INTEGER" />
        <result column="have_planning" property="havePlanning" jdbcType="INTEGER" />
        <result column="contract_award_company" property="contractAwardCompany" jdbcType="INTEGER" />
        <result column="management_personnel" property="managementPersonnel" jdbcType="INTEGER" />
        <result column="management_department" property="managementDepartment" jdbcType="INTEGER" />
        <result column="project_leader" property="projectLeader" jdbcType="INTEGER" />
        <result column="remittance_company" property="remittanceCompany" jdbcType="VARCHAR" />
        <result column="nopass_reason" property="nopassReason" jdbcType="VARCHAR" />
        <result column="step" property="step" jdbcType="INTEGER" />
    </association>
    <association property="leader" column="project_leader" javaType="Admin">
        <id property="id" column="admin_id" />
        <result property="username" column="username" />
        <result property="name" column="admin_name" />
        <result property="mobile" column="mobile" />
        <result property="jobId" column="job_id" />
    </association>
    <association property="basic" column="payment_mode" javaType="BasicData" fetchType="lazy">
        <id column="basic_id" property="id" jdbcType="INTEGER" />
        <result column="basic_category_id" property="categoryId" jdbcType="INTEGER" />
        <result column="basic_category_name" property="categoryName" jdbcType="VARCHAR" />
        <result column="basic_attribute_id" property="attributeId" jdbcType="INTEGER" />
        <result column="basic_attribute_name" property="attributeName" jdbcType="VARCHAR" />
    </association>
    <collection property="finance" column="payment_mode" ofType="FinancialAudit" fetchType="lazy">
        <id column="finance_id" property="id" jdbcType="INTEGER" />
        <result column="finance_type" property="type" jdbcType="INTEGER" />
        <result column="finance_payment_mode" property="paymentMode" jdbcType="INTEGER" />
        <result column="finance_amount" property="amount" jdbcType="DECIMAL" />
        <result column="finance_status" property="status" jdbcType="INTEGER" />
    </collection>
  </resultMap>
  <sql id="Base_Column_List" >
    id, company_id, subpackage_id, payment_mode, payment_amount, create_time, create_user_id, 
    update_time, update_user_id, version
  </sql>
  <select id="getSubpackagePaymentCount" resultType="java.lang.Integer" parameterType="ContractSubpackageQuery" >
    select count(zsp.id)
    from z_subpackage_payment zsp
    left outer join z_subpackage zs on zsp.company_id=zs.company_id and zsp.subpackage_id=zs.id
    left outer join z_project zp on zsp.company_id=zs.company_id and zs.project_id=zp.id
    left outer join t_admin ta on zsp.company_id=ta.company_id and zs.subpackage_leader=ta.id
    left outer join z_financial_audit zfa on zsp.company_id=zfa.company_id and zs.project_id=zfa.project_id 
                   and zsp.payment_mode=zfa.payment_mode and zfa.type=#{verifyType,jdbcType=INTEGER}
    LEFT OUTER JOIN t_basic tb on zsp.payment_mode=tb.id and zsp.company_id=tb.company_id
    <include refid="payment_where_clause"></include>
  </select>
  <select id="getSubpackagePaymentByCondition" resultMap="SubpackagePaymentInfoResultMap" parameterType="ContractSubpackageQuery" >
    select zsp.*
        , zs.id package_id, zs.project_id, zs.subpackage_leader, zs.subpackage_capital, zs.subpackage_content
        , zs.payment_memo, zs.subpackage_memo, zs.status
        , zp.id garden_project_id, zp.project_no, zp.name, zp.city, zp.address, zp.nature, zp.category,
        zp.type, zp.contract_award_company, zp.management_personnel, zp.project_leader, zp.remittance_company, zp.nopass_reason, zp.step
        ,zp.design_area,zp.investment_mount,zp.have_scheme,zp.have_development,zp.have_drawing,zp.have_planning
        ,ta.id admin_id, ta.username, ta.name admin_name, ta.mobile, ta.job_id
        ,tb.id basic_id, tb.category_id basic_category_id, tb.category_name basic_category_name, tb.attribute_id basic_attribute_id
        ,tb.attribute_name basic_attribute_name
        ,zfa.id finance_id, zfa.type finance_type, zfa.payment_mode finance_payment_mode, zfa.amount finance_amount, zfa.status finance_status
    from z_subpackage_payment zsp
    left outer join z_subpackage zs on zsp.company_id=zs.company_id and zsp.subpackage_id=zs.id
    left outer join z_project zp on zsp.company_id=zs.company_id and zs.project_id=zp.id
    left outer join t_admin ta on zsp.company_id=ta.company_id and zs.subpackage_leader=ta.id
    left outer join z_financial_audit zfa on zsp.company_id=zfa.company_id and zs.project_id=zfa.project_id 
                   and zsp.payment_mode=zfa.payment_mode and zfa.type=#{verifyType,jdbcType=INTEGER}
    LEFT OUTER JOIN t_basic tb on zsp.payment_mode=tb.id and zsp.company_id=tb.company_id
    <include refid="payment_where_clause"></include>
    <choose>
        <when test="orderBy != null and orderBy!=''">
            order by #{orderBy}
        </when>
        <otherwise>
            order by zsp.create_time
        </otherwise>
    </choose>    
    limit #{pageBean.offset},#{pageBean.pageSize}
  </select>
  <sql id="payment_where_clause">
    <where>
        <trim prefixOverrides="and">
          <if test="companyId != null" >
            zsp.company_id = #{companyId,jdbcType=INTEGER}
          </if>
          <if test="projectId != null" >
            and zs.project_id = #{projectId,jdbcType=INTEGER}
          </if>
          <if test="paymentMode != null" >
            and zsp.payment_mode = #{paymentMode,jdbcType=INTEGER}
          </if>
          <if test="subpackageLeader != null">
            and zs.subpackage_leader = #{subpackageLeader,jdbcType=INTEGER}
          </if>
          <if test="projectLeader != null">
            and zp.project_leader = #{projectLeader,jdbcType=INTEGER}
          </if>
          <if test="projectName != null">
            and zp.name like CONCAT('%', #{projectName,jdbcType=VARCHAR}, '%')
          </if>
        </trim>
    </where>
  </sql>
    
  <delete id="deleteSubpackagePaymentByCondition" parameterType="ContractSubpackageQuery" >
    delete from z_subpackage_payment
    <where>
      <trim prefixOverrides="and">
            <if test="id != null">
                id = #{id,jdbcType=INTEGER}
            </if>
            <if test="subpackageId != null">
                and subpackage_id = #{subpackageId,jdbcType=INTEGER}
            </if>
       </trim>
    </where>
  </delete>

  <insert id="insertSubpackagePayment" parameterType="SubpackagePayment" >
    insert into z_subpackage_payment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="companyId != null" >
        company_id,
      </if>
      <if test="subpackageId != null" >
        subpackage_id,
      </if>
      <if test="paymentMode != null" >
        payment_mode,
      </if>
      <if test="paymentAmount != null" >
        payment_amount,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="updateUserId != null" >
        update_user_id,
      </if>
      <if test="version != null" >
        version,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="companyId != null" >
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="subpackageId != null" >
        #{subpackageId,jdbcType=INTEGER},
      </if>
      <if test="paymentMode != null" >
        #{paymentMode,jdbcType=INTEGER},
      </if>
      <if test="paymentAmount != null" >
        #{paymentAmount,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null" >
        #{updateUserId,jdbcType=INTEGER},
      </if>
      <if test="version != null" >
        #{version,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateSubpackagePaymentById" parameterType="SubpackagePayment" >
    update z_subpackage_payment
    <set >
      <if test="companyId != null" >
        company_id = #{companyId,jdbcType=INTEGER},
      </if>
      <if test="subpackageId != null" >
        subpackage_id = #{subpackageId,jdbcType=INTEGER},
      </if>
      <if test="paymentMode != null" >
        payment_mode = #{paymentMode,jdbcType=INTEGER},
      </if>
      <if test="paymentAmount != null" >
        payment_amount = #{paymentAmount,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null" >
        update_user_id = #{updateUserId,jdbcType=INTEGER},
      </if>
        version = version + 1,
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

</mapper>